---
description: 
globs: 
alwaysApply: true
---
---
title: 命名ルール
description: 命名ルールと期待される効果
---

### 開発におけるルール・制約
- メソッドについては、用途に応じて厳格な命名ルールを設けます。命名対象は厳しくレビュー対象として審査されます。
- 命名を逸脱する例外は許容されません。逸脱する場合には以下の手順を踏む必要があります。
    1. 本項記載の命名ルールについて訂正のプロポーサルを提出する
    2. 提案が受け入れられた場合は、本項の命名ルールを更新する
    3. 元の命名を使用する

### 期待する効果
- 処理に応じて命名をパターン化する事で、開発者間での認知的負荷を低減します
- つまり、”チーム内でパッとメソッド名を見た時に、これはXXXXの処理かなるほど〜”  と瞬時に理解できる状態を常に維持します

### 受け入れるデメリット
- 命名の徹底は一般的な原則にもかなっているため、特に想定されるデメリットはありません

### メソッドの命名ルール
| カテゴリ | 処理 | 名称パターン | 担当する処理 |
| --- | --- | --- | --- |
| メソッド | Fiirestoreからdocを取得する | fetchXXXX (XXXは複数形の場合はsをつけて、操作対象の要素を明確に示す) | - Firestoreから要素を取得する<br>- エラーが発生した場合は例外をThrowする。<br>- 取得した要素は一部例外はあるものの、PiniaStoreの上書きを基本的に実施し、App内でデータを利用可能とする |
| メソッド | Firestoreのdocを削除する | deleteXXXX (XXXは複数形の場合はsをつけて、操作対象の要素を明確に示す) | - Firestoreの指定したDocを削除する。エラーが発生した場合は例外をThrowする。 |
| メソッド | Firestoreに新しいdocを生成する | createXXX | - Firestoreに新しいDocを生成します |
| メソッド | Firestoreの既存docを更新する | updateXXX | - Firestoreの既存のDocを更新します |
| Pinia | Storeの名称 | xxxStore | - PiniaStoreは、xxxx Storeの名称をつけます |